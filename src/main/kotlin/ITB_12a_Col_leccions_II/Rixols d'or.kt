package ITB_12a_Col_leccions_II

/*
La Zona Rinxols d'or a l'espai es aquella zona intermitja de dist√†ncia i tamany dels planetes, ni massa freda ni massa calenta, ni massa gran ni massa petit. El que √©s m√©s important √©s la dist√†ncia, i nom√©s si dos planetes estan a la mateixa dist√†ncia consideraras el tamany.

Agafa en cada cas aquell que quedi just al mig.


Entrada

La primera l√≠nea son els casos de prova que hi ha.

Cada cas de prova comen√ßar√† amb una l√≠nea amb ùëÅ
, el nombre de planetes en aquell sistema solar. ùëÅ

sempre ser√† senar.

Despr√©s vindr√†n ùëÅ

l√≠nies, cadascuna amb el nom del planeta, que ser√† una paraula, la dist√†ncia al seu sol en UA i el tamany en Massa-Terra


Sortida

El nom del planeta que la seva dist√†ncia queda just en el mig (per tant, el nom del planeta que la seva dist√†ncia coincideix amb la mediana de la llista de dist√†ncies.) Si hi hagu√©s m√©s d'un planeta amb aquestes caracter√≠stiques, es triaria, dintre d'aquests, aquell que el seu tamany fos la mediana dels planetes amb la mateixa dist√†ncia.


Exemple d'Entrada
1
5
Mercuri 1 0.3
Venus 3 0.9
Terra 3.5 1 1
Mart 4.2 0.7
Jupiter 9 300

Exemple de Sortida
Terra


 */


/*
import java.util.*

fun main() {
    val scan = Scanner(System.`in`)
    val casos = scan.nextInt()
    for (i in 1..casos) { //llegim el nombre de casos per cada cas llegim el nombre de planetes
        val numPlanetes = scan.nextInt()
        val planetes = mutableListOf<Triple<String, Double, Double>>() //creem una llista de Triple
        for (j in 0 until n) { //Per cada planeta llegim el nom, llegim la dist√†ncia, llegim el tamany i afegim el Triple a la llista
            val nom = scan.next()
            val distancia = scan.nextDouble()
            val tamany = scan.nextDouble()
            planetes.add(Triple(nom, distancia, tamany))
        }
        planetes.sortBy { it.second } //ordenem la llista per la dist√†ncia
        val mediana = planetes[n / 2] //agafem el planeta de la posici√≥ n / 2
        val planetesMediana = planetes.filter { it.second == mediana.second } //filtrem els planetes amb la mateixa dist√†ncia
        planetesMediana.sortBy { it.third } //ordenem la llista per el tamany
        println(planetesMediana[planetesMediana.size / 2].first) //escrivim el nom del planeta de la posici√≥ planetesMediana.size / 2
    }
}


 */